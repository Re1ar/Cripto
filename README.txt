Для определения собственных движений цены фьючерса 
ETHUSDT исключив из них движения вызванные влиянием цены 
BTCUSDT можно использовать метод корреляционного анализа.

Корреляционный анализ позволяет оценить связь между двумя переменными. 
В данном случае переменными являются цены фьючерсов ETHUSDT и BTCUSDT. 
Коэффициент корреляции показывает, насколько сильна связь между переменными. 
Если коэффициент корреляции близок к 1, то это означает, что цены двух 
фьючерсов сильно связаны. Если же коэффициент корреляции близок к 0, 
то это означает, что цены двух фьючерсов практически не связаны.

Для того, чтобы определить собственные движения цены фьючерса ETHUSDT, 
можно рассчитать коэффициент корреляции между ценами фьючерсов ETHUSDT и BTCUSDT. 
Если коэффициент корреляции близок к 0, то это означает, что движения цены 
BTCUSDT не влияют на цену ETHUSDT, и мы можем использовать цену фьючерса 
ETHUSDT для определения собственных движений цены.

Подбор параметров для корреляционного анализа зависит от конкретной задачи. 
В данном случае мы можем использовать ежедневные данные о ценах фьючерсов 
ETHUSDT и BTCUSDT за определенный период времени (например, за последний год), 
и рассчитать коэффициент корреляции между ними. При этом необходимо учитывать, 
что корреляция может меняться со временем и зависеть от текущей ситуации на рынке.

Если коэффициент корреляции между ценами фьючерсов ETHUSDT и BTCUSDT близок к 0, 
то мы можем использовать цену фьючерса ETHUSDT для определения собственных 
движений цены. Если же коэффициент корреляции высокий, то необходимо использовать 
другие методы анализа данных для определения собственных движений цены фьючерса 
ETHUSDT.



---------------------------------------------------------------------------------

Для написания такой программы на Python нам понадобится использовать API биржи, 
с которой мы будем получать актуальную цену фьючерса ETHUSDT. 
Мы также будем использовать модуль time для создания задержки между 
запросами и модуль datetime для работы со временем.

Перед тем, как начать написание программы, мы должны зарегистрироваться на 
бирже и получить API-ключ, который мы будем использовать для получения 
актуальной цены.

Для решения задачи мы будем использовать следующий алгоритм:

1)Импортируем нужные модули.

2)Задаем константы, такие как таймфрейм (60 минут), процент изменения цены (1%) и API-ключ для доступа к бирже.

3)Создаем функцию get_price, которая будет использовать API биржи для получения актуальной цены фьючерса ETHUSDT. 
Мы будем использовать модуль requests для создания запросов к API, а затем преобразуем ответ в формат JSON, чтобы получить цену.

4)Создаем функцию check_price, которая будет получать цену с помощью функции get_price и проверять, 
изменилась ли цена более чем на 1% за последний час. 
Если изменение цены более чем 1%, функция выводит сообщение в консоль.

5)Создаем бесконечный цикл, который будет вызывать функцию check_price каждые 60 секунд.